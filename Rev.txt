
########################## Arrays #############################################
# some tips
    1) use int max = INTEGER.min and int min = INTEGER.max

2) swap elements
    int temp = a
    a = b
    b = temp

3) Reverse array
    start = 0, end = arr.length
    while(start<end){
    swap(arr,start,end)
    start++
    end--
    }

4) Order Agnostic Binary Search
    start = 0
    end = arr.length
    bool isAsc = arr[start]<arr[end]
    while(start<end){
        mid = start + (end - start)/2
        if(arr[mid] == target){
        return mid
        }
        if(isAsc){
            if(target<arr[mid]){
                end = mid-1
            }else{
                start = mid+1
            }
        }else{
            if(target<arr[mid]){
                start = mid+1
            }else{
                end = mid-1
            }
        }
    }

5) Find ceil and floor element
    # ceil element -> The smallest element in array which is greater than or equal to target
    # floor element -> The largest element in array which is smaller than or equal to target
       [1,4,6,8,11,16]
       target -> 7 or 8
       floor -> 8  or 8  -> return end
       ceil -> 11  or 8  -> return start

       here in BS we use while(start<=end) so
       end = start - 1 = arr.len - 1 (if ele not found)
       start = end + 1 = arr.len (if ele not found)

       In case of circular array if target is beyond last index return the first element
       so, we can use return[start % arr.len]
       so if start < arr.len it will return the index which is start
       if ele not found i.e. start = arr.len so arr.len % arr.len = 0 i.e first element

6) First and last index of occurrence
    

